<?xml version="1.0" encoding="UTF-8"?>
<ChatRoom id="snow" xmlns:xi="http://www.w3.org/2001/XInclude">

	<Attribute key="startX" value="430" type="number" />
	<Attribute key="startY" value="360" type="number" />
	
	<ActorMouseMovementProxy directions="8"/>
	<TargetedCollisionProxy target="{Room.steve}"/>	
	
	<Collision width="887" height="631" id="walkableArea" solid="true">
		<Asset assetID="hit" x="0" y="0" />
	</Collision>
	
	<Filters id="playerFilters">
		<DepthFilter scaleBack="-0.1" scaleFront="0.6" />
	</Filters>
	
	<Scene id="scene" target="{Room.player}" viewportWidth="784" viewportHeight="445" width="887" height="631">
		<DisplayObject2D id="background" assetID="background" mouseEnabled="false" />
		<DisplayObject2D id="click" assetID="click" mouseEnabled="true" clickThrough="true" alpha="0" name="Some dude"/>
		<ZSortingDisplayObject id="furniture">
			<DisplayObject2D id="sign" assetID="sign" x="0" y="425" originX="0" originY="425" mouseEnabled="false"/>
			<Character id="player" filters="{Room.playerFilters}" name="Matthew" speed="0" defaultSpeed="5.5" x="{Room.startX}" y="{Room.startY}" originX="112" originY="269" collidable="true" mouseEnabled="true" clickThrough="true" displayObjectClass="uk.co.dubit.graphics.render2D.ActionPlayer">
				<Actions id="actions" defaultAction="stand">
					<Stand id="stand" path="images/avatar/stand.swf"/>
					<Walk id="walk" path="images/avatar/walk.swf"/>
				</Actions>
			</Character>
		</ZSortingDisplayObject>
		<DisplayObject2D id="foreground" assetID="foreground" x="0" y="0" originX="0" originY="0" mouseEnabled="false"/>
		<ZSortingDisplayObject id="playerMessages" />		
	</Scene>
	
	<Assets>
		<Asset id="hit" url="[base.url]images/snow/hit.png"/>
		<Asset id="click" url="[base.url]images/snow/click.png"/>
		<Asset id="background" url="[base.url]images/snow/background.png"/>
		<Asset id="foreground" url="[base.url]images/snow/foreground.png"/>
		<Asset id="sign" url="[base.url]images/snow/sign.png"/>
		<Asset id="player" url="[base.url]images/avatar/player.png" />
	</Assets>
	
	<Sounds target="{Room.player}" >	
	</Sounds>
	
	<Trigger event="OnClick" gameObject="{Room.click}">	
		<MoveTo gameObject="{Room.player}" x="{Room.player.x}" y="{Room.player.y}" targetX="{Event.x}" targetY="{Event.y}"/>
	</Trigger>

	<Trigger event="OnDragDrop" gameObject="{Room.player}">	
		<ShowBubble gameObject="{Room.player}" message="Oooh a {Event.dragInitiator.description}!" yOffset="-150"/>
		<RemoveFromBackpack gameObject="{Event.dragInitiator}"/>
	</Trigger>
	
	<Trigger event="OnClick" gameObject="{Room.player}">
		<BeginQuest questID="keyQuest"/>
		<!--BeginDialogue statement="{Room.talkToShopKeeper}" npc="{Room.click}" player="{Room.player}" messageDelay="0" dialogueID="dialogue" /-->
	</Trigger>
	
	<Dialogue id="dialogue">
		<Triggers>	
			<OnBeginDialogue><Trace message="Dialogue began"/></OnBeginDialogue>
			<OnCompleteDialogue><Trace message="Dialogue complete"/></OnCompleteDialogue>
			<OnMessage>
				<If expression="({Event.messageTarget}=={Room.player})">
					<Then>
						<ShowBubble gameObject="{Room.player}" message="{Event.message}" yOffset="-100"/>
					</Then>
				</If>
			</OnMessage>
		</Triggers>
	</Dialogue>	
	
	<Statement id="talkToShopKeeper" message1="Hey good to see you! How can I help you?">
		<!-- Behaviors execute once all the messages have been displayed -->
		<Trace message="Proof that other behaviours execute..."/>

		<Response message="What is there to do around here? Is there anywhere I can buy some food, maybe a drink? Is anyone looking for help?!">
			<!-- Statements can be nested in responses -->
			<Statement message1="Well you could go to the shops, or if you're looking for a drink try the bar">
				<Response message="Thanks, can we talk about something else?">
					<Statement message1="Sure, what would you like to ask?">
						<!-- This node enables the conversation to display the responses from else where in the tree.  In this case the conversation loops back to the top -->
						<PlayResponses statementID="talkToShopKeeper" />
					</Statement>
				</Response>
			</Statement> 
		</Response>	

		<!-- A response will only be shown if the conditions are met and the messages have finished -->
		<Response message="I found this hammer, would you like it?!" condition1="({Backpack.has.hammer}=={true})">	
			<Statement message="Yes, thanks so much!">
				<!-- Adding this in the response node means it gets called immediately, does not wait for the statement to finish -->
				<RemoveFromBackpack gameObject="{Backpack.hammer}" delay="200"/>
				<Response message="My pleasure, can we talk about something else?">
					<Statement message1="Sure, what would you like to ask?">
						<PlayResponses statementID="talkToShopKeeper" />
					</Statement>
				</Response>
			</Statement>
		</Response>

		<Response message="Do you know any jokes?">
			<!-- In this case the joke1 statement is defined in another file.  GAML supports includes so that lengthy conversations can be broken down into smaller files -->
			<PlayStatement statementID="joke1"/>
		</Response>	

		<Response message="Nice talking to you, but I've got to go now">
			<Statement message="Likewise! Cheerio!"/>
		</Response>
	</Statement>
	
	<Statement id="joke1" message="Why did the chicken cross the road?">
		<Response message="I've no idea...">
			<Statement message="To get to the other side!">
				<!-- Play the root responses for this dialogue.  Root is special case, need some documenting -->
				<PlayResponses statementID="root"/>
			</Statement>
		</Response>
	</Statement>	
	
</ChatRoom>